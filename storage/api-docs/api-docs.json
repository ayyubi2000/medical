{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel starter Application",
        "description": " laravle startter description",
        "contact": {
            "email": "ayubxonnematov@gmail.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "login": {
            "post": {
                "tags": [
                    "login"
                ],
                "summary": "Insert a new User",
                "description": "Insert a new User",
                "operationId": "login",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "insert your email",
                        "required": true
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "insert your password",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "register": {
            "post": {
                "tags": [
                    "login"
                ],
                "summary": "Insert a new User",
                "description": "Insert a new User",
                "operationId": "register",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "insert your email",
                        "required": true
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "insert your password",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "reset-password": {
            "post": {
                "tags": [
                    "login"
                ],
                "summary": "resetPassword",
                "description": "resetPassword",
                "operationId": "resetPassword",
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "description": "insert your email",
                        "required": true
                    },
                    {
                        "name": "code",
                        "in": "query",
                        "description": "insert your code",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "logout": {
            "get": {
                "tags": [
                    "login"
                ],
                "summary": "logout ",
                "description": "account logout",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "check-user-token": {
            "get": {
                "tags": [
                    "login"
                ],
                "summary": "account",
                "description": "user account description",
                "operationId": "checkUserToken",
                "responses": {
                    "200": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/api/crudgenerators": {
            "get": {
                "tags": [
                    "CrudGenerators"
                ],
                "summary": "Get list of CrudGenerator",
                "description": "Returns list of CrudGenerator",
                "operationId": "indexCrudGenerator",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CrudGenerator"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CrudGenerators"
                ],
                "summary": "Insert a new CrudGenerator",
                "description": "Insert a new CrudGenerator",
                "operationId": "storeCrudGenerator",
                "requestBody": {
                    "description": "CrudGenerator to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/CrudGenerator"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "CrudGenerator created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CrudGenerator"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/crudgenerators/{crudgenerator_id}": {
            "get": {
                "tags": [
                    "CrudGenerators"
                ],
                "summary": "Show a CrudGenerator from his Id",
                "description": "Show a CrudGenerator from his Id",
                "operationId": "showCrudGenerator",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CrudGenerator--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CrudGenerator"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "CrudGenerator not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "CrudGenerators"
                ],
                "summary": "Delete a CrudGenerator",
                "description": "Delete a CrudGenerator",
                "operationId": "destroyCrudGenerator",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CrudGenerator--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CrudGenerator"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "CrudGenerator not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "CrudGenerators"
                ],
                "summary": "Update an existing CrudGenerator",
                "description": "Update an existing CrudGenerator",
                "operationId": "updateCrudGenerator",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/CrudGenerator--id"
                    }
                ],
                "requestBody": {
                    "description": "CrudGenerator to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/CrudGenerator"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/CrudGenerator"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "CrudGenerator not found"
                    }
                }
            }
        },
        "/api/emailverificationcode": {
            "post": {
                "tags": [
                    "EmailVerificationCodes"
                ],
                "summary": "Insert a new EmailVerificationCode",
                "description": "Insert a new EmailVerificationCode",
                "operationId": "storeEmailVerificationCode",
                "requestBody": {
                    "description": "EmailVerificationCode to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/EmailVerificationCode"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "EmailVerificationCode created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/EmailVerificationCode"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/emailverificationcode/{emailverificationcode_id}": {
            "get": {
                "tags": [
                    "EmailVerificationCodes"
                ],
                "summary": "Show a EmailVerificationCode from his Id",
                "description": "Show a EmailVerificationCode from his Id",
                "operationId": "showEmailVerificationCode",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/EmailVerificationCode--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/EmailVerificationCode"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "EmailVerificationCode not found"
                    }
                }
            }
        },
        "/api/region": {
            "get": {
                "tags": [
                    "Regions"
                ],
                "summary": "Get list of Region",
                "description": "Returns list of Region",
                "operationId": "indexRegion",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Regions"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Regions"
                ],
                "summary": "Insert a new Region",
                "description": "Insert a new Region",
                "operationId": "storeRegion",
                "requestBody": {
                    "description": "Region to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Region"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Region created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Region"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/region/{region_id}": {
            "get": {
                "tags": [
                    "Regions"
                ],
                "summary": "Show a Region from his Id",
                "description": "Show a Region from his Id",
                "operationId": "showRegion",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Region--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Region"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Region not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Regions"
                ],
                "summary": "Delete a Region",
                "description": "Delete a Region",
                "operationId": "destroyRegion",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Region--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Region"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "Region not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Regions"
                ],
                "summary": "Update an existing Region",
                "description": "Update an existing Region",
                "operationId": "updateRegion",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/Region--id"
                    }
                ],
                "requestBody": {
                    "description": "Region to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/Region"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/Region"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Region not found"
                    }
                }
            }
        },
        "/api/upload-file": {
            "post": {
                "tags": [
                    "Files"
                ],
                "summary": "Upload a file and get path",
                "description": "Upload file",
                "operationId": "uploadFile",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "path": {
                                            "title": "path",
                                            "type": "string",
                                            "example": "example/example.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get list of User",
                "description": "Returns list of User",
                "operationId": "indexUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Users"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Insert a new User",
                "description": "Insert a new User",
                "operationId": "storeUser",
                "requestBody": {
                    "description": "User to create",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation exception"
                    }
                }
            }
        },
        "/api/user/{user_id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Show a User from his Id",
                "description": "Show a User from his Id",
                "operationId": "showUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/User--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete a User",
                "description": "Delete a User",
                "operationId": "destroyUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/User--id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No content"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Update an existing User",
                "description": "Update an existing User",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/User--id"
                    }
                ],
                "requestBody": {
                    "description": "User to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "data": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/role": {
            "get": {
                "tags": [
                    "Role"
                ],
                "summary": "Show a role list",
                "description": "Show a role list",
                "operationId": "showRole",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "CrudGenerator": {
                "title": "CrudGenerator",
                "description": "CrudGenerator model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of CrudGenerator",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of CrudGenerator",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of CrudGenerator",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of CrudGenerator",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "CrudGenerators": {
                "title": "CrudGenerators list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CrudGenerator"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "EmailVerificationCode": {
                "title": "EmailVerificationCode",
                "description": "EmailVerificationCode model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of EmailVerificationCode",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of EmailVerificationCode",
                        "type": "string",
                        "example": "Macbook Pro"
                    },
                    "sku": {
                        "title": "sku",
                        "description": "sku of EmailVerificationCode",
                        "type": "string",
                        "example": "MCBPRO2022"
                    },
                    "price": {
                        "title": "price",
                        "description": "price of EmailVerificationCode",
                        "type": "integer",
                        "example": "99"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "EmailVerificationCodes": {
                "title": "EmailVerificationCodes list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmailVerificationCode"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Region": {
                "title": "Region",
                "description": "Region model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Region",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "name",
                        "description": "name of Region",
                        "type": "string",
                        "example": "Macbook Pro"
                    }
                },
                "type": "object"
            },
            "Regions": {
                "title": "Regions list",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Region"
                        }
                    },
                    "first_page_url": {
                        "title": "first_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=1"
                    },
                    "last_page_url": {
                        "title": "last_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=3"
                    },
                    "prev_page_url": {
                        "title": "prev_page_url",
                        "type": "string",
                        "example": "null"
                    },
                    "next_page_url": {
                        "title": "next_page_url",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers?page=2"
                    },
                    "current_page": {
                        "title": "current_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "from": {
                        "title": "from",
                        "type": "integer",
                        "example": "1"
                    },
                    "last_page": {
                        "title": "last_page",
                        "type": "integer",
                        "example": "3"
                    },
                    "path": {
                        "title": "path",
                        "type": "string",
                        "example": "http://localhost:8080/api/merchant-customers"
                    },
                    "per_page": {
                        "title": "per_page",
                        "type": "integer",
                        "example": "1"
                    },
                    "total": {
                        "title": "total",
                        "type": "integer",
                        "example": "3"
                    },
                    "links": {
                        "title": "links",
                        "type": "array",
                        "items": {
                            "properties": {
                                "url": {
                                    "title": "url",
                                    "type": "string",
                                    "example": "http://localhost:8080/api/merchant-customers?page=2"
                                },
                                "label": {
                                    "title": "label",
                                    "type": "string",
                                    "example": "1"
                                },
                                "active": {
                                    "title": "active",
                                    "type": "boolean",
                                    "example": "true"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of User",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "first_name": {
                        "title": "first_name",
                        "description": "first_name of User",
                        "type": "string",
                        "example": "Lorem"
                    },
                    "last_name": {
                        "title": "last_name",
                        "description": "last_name of User",
                        "type": "string",
                        "example": "Lorem"
                    },
                    "middle_name": {
                        "title": "middle_name",
                        "description": "middle_name of User",
                        "type": "string",
                        "example": "Lorem"
                    },
                    "username": {
                        "title": "username",
                        "description": "username of User",
                        "type": "string",
                        "example": "example"
                    },
                    "roles": {
                        "title": "roles",
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "title": "id",
                                    "description": "id of Role",
                                    "type": "integer",
                                    "readOnly": "true",
                                    "example": "1"
                                },
                                "role": {
                                    "title": "role",
                                    "description": "Name of Role",
                                    "type": "string",
                                    "readOnly": "true",
                                    "example": "Merchant"
                                },
                                "status": {
                                    "title": "status",
                                    "description": "Status of Role",
                                    "type": "integer",
                                    "readOnly": "true",
                                    "example": "20"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            },
            "Users": {
                "title": "Users",
                "properties": {
                    "data": {
                        "title": "data",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "links": {
                        "title": "links",
                        "properties": {
                            "first": {
                                "title": "first",
                                "type": "string",
                                "example": "http://localhost:8080/api/users?page=1"
                            },
                            "last": {
                                "title": "last",
                                "type": "string",
                                "example": "http://localhost:8080/api/users?page=3"
                            },
                            "prev": {
                                "title": "prev",
                                "type": "string",
                                "example": "null"
                            },
                            "next": {
                                "title": "next",
                                "type": "string",
                                "example": "http://localhost:8080/api/users?page=2"
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "title": "meta",
                        "properties": {
                            "current_page": {
                                "title": "current_page",
                                "type": "integer",
                                "example": "1"
                            },
                            "from": {
                                "title": "from",
                                "type": "integer",
                                "example": "1"
                            },
                            "last_page": {
                                "title": "last_page",
                                "type": "integer",
                                "example": "3"
                            },
                            "path": {
                                "title": "path",
                                "type": "string",
                                "example": "http://localhost:8080/api/users"
                            },
                            "per_page": {
                                "title": "per_page",
                                "type": "integer",
                                "example": "1"
                            },
                            "total": {
                                "title": "total",
                                "type": "integer",
                                "example": "3"
                            },
                            "links": {
                                "title": "links",
                                "type": "array",
                                "items": {
                                    "properties": {
                                        "url": {
                                            "title": "url",
                                            "type": "string",
                                            "example": "http://localhost:8080/api/users?page=2"
                                        },
                                        "label": {
                                            "title": "label",
                                            "type": "string",
                                            "example": "1"
                                        },
                                        "active": {
                                            "title": "active",
                                            "type": "boolean",
                                            "example": "true"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "UserRoles": {
                "title": "User Role",
                "description": "UserRoles model",
                "required": [],
                "properties": {
                    "id": {
                        "title": "id",
                        "description": "id of Role",
                        "type": "integer",
                        "readOnly": "true",
                        "example": "1"
                    },
                    "name": {
                        "title": "role_code",
                        "description": "name of Role",
                        "type": "string",
                        "example": "admin"
                    },
                    "user_id": {
                        "title": "user_id",
                        "description": "user_id of Role",
                        "type": "integer",
                        "example": "1"
                    },
                    "role_id": {
                        "title": "role_id",
                        "description": "role_id of Role",
                        "type": "integer",
                        "example": "1"
                    },
                    "status": {
                        "title": "status",
                        "description": "id of user",
                        "type": "integer",
                        "example": "10"
                    },
                    "created_at": {
                        "title": "created_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    },
                    "updated_at": {
                        "title": "updated_at",
                        "type": "dateTime",
                        "readOnly": "true",
                        "example": "2022-07-04T02:41:42.336Z"
                    }
                },
                "type": "object"
            }
        },
        "parameters": {
            "CrudGenerator--id": {
                "name": "CrudGenerator_id",
                "in": "path",
                "description": "Id of CrudGenerator",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "EmailVerificationCode--id": {
                "name": "EmailVerificationCode_id",
                "in": "path",
                "description": "Id of EmailVerificationCode",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Region--id": {
                "name": "Region_id",
                "in": "path",
                "description": "Id of Region",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "User--id": {
                "name": "user_id",
                "in": "path",
                "description": "Id of User",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            },
            "Role--id": {
                "name": "Role_id",
                "in": "path",
                "description": "Id of Role",
                "required": true,
                "schema": {
                    "type": "integer",
                    "example": "1"
                }
            }
        }
    }
}